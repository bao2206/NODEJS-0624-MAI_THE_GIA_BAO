<% const entityName = 'product'; %> <% const entityId = entityName ?
entityName._id : ''; %> <% const linkPrefix = 'admin'; %> <% const formAction
=`/${linkPrefix}/${entityName}/form`; %> <% const listAction
=`/${linkPrefix}/${entityName}`; %>
<style>
  .flash-message {
    position: fixed;
    bottom: 10px;
    right: 10px;
    padding: 15px;
    z-index: 1000;
    display: none;
    border-radius: 5px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    font-size: 14px;
    max-width: 300px;
    word-wrap: break-word;
  }

  .flash-message.success {
    background-color: #4caf50;
    color: white;
  }

  .flash-message.error {
    background-color: #f44336;
    color: white;
  }
</style>

<div class="row mb-2">
  <div class="col-sm-6">
    <h1 class="m-0">Danh mục <%= entityName %></h1>
  </div>
</div>

<div class="card card-info card-outline">
  <div class="card-header">
    <h6 class="card-title">Search & Filter</h6>
    <div class="card-tools">
      <button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip" title="Collapse">
        <i class="fas fa-minus"></i>
      </button>
    </div>
  </div>
  <div class="card-body">
    <div class="row justify-content-between">
      <div class="mb-1">
        <div class="btn-search">
          <% countStatus.forEach(status => { %>
          <a href="<%= `${listAction}?status=${status.link}` %>">
            <button type="button" class="btn <%= status.class %>">
              <span><%= status.name + " (" + status.countStatus + ")" %></span>
            </button>
          </a>
          <% }) %>
        </div>
      </div>
      <div class="mb-1">
        <form action="<%= listAction %>" method="get">
          <div class="input-group">
            <input type="text" class="form-control form-control-sm" name="keyword" value="<%= searchTerm %>" placeholder="Search for..." style="min-width: 300px" />
            <input type="hidden" name="status" value="<%= status %>" />
            <div class="input-group-append">
              <a type="button" class="btn btn-sm btn-danger" href="<%= listAction %>">Clear</a>
              <button type="submit" class="btn btn-sm btn-info" id="btn-search">
                Search
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Content -->
<form action="<%= `${listAction}/multipleAction` %>" method="post" name="multipleForm" id="multiForm">
  <div class="card card-info card-outline">
    <div class="card-header">
      <h4 class="card-title">List</h4>
      <div class="card-tools">
        <div class="btn-group">
          <button type="button" class="btn btn-info" data-toggle="dropdown" aria-expanded="false">
            Change Status
          </button>
          <div class="dropdown-menu" role="menu">
            <button type="button" onClick="" class="dropdown-item" data-toggle="modal" data-target="#modal-success">
              Change to Active
            </button>
            <div class="dropdown-divider"></div>
            <button type="button" onClick="" class="dropdown-item" data-toggle="modal" data-target="#modal-danger">
              Change to Inactive
            </button>
          </div>
        </div>
        <a href="<%= formAction %>" class="btn btn-warning" style="background-color: #f0ad4e; color: white; font-weight: 500">Add New</a>
        <button type="button" class="btn btn-danger" onClick="" data-toggle="modal" data-target="#modal-danger">
          <i class="fas fa-trash-alt"></i>Delete Multi
        </button>
      </div>
      <input type="hidden" name="action" id="inputHiddenAll" value="" />
    </div>
    <div class="card-body">
      <table class="table table-bordered table-hover text-nowrap btn-table mb-0">
        <thead>
          <tr>
            <!-- <th class="text-center">
              <div class="custom-control custom-checkbox">
                <input class="custom-control-input cbAll" type="checkbox" id="check-all" />
                <label for="check-all" class="custom-control-label"></label>
              </div>
            </th> -->
            <!-- <th class="text-center">#</th> -->
            <th class="text-center">ID</th>
            <th class="text-center">Name</th>
            <th class="text-center">Price</th>
            <th class="text-center">Total Price</th>
            <!-- <th class="text-center">Category</th> -->
            <th class="text-center">Status</th>
            <th class="text-center">Ordering</th>
            <th class="text-center">Image</th>
            <th class="text-center">Action</th>
          </tr>
        </thead>
        <tbody>
          <% if (items && items.length) { %> <% items.forEach((item, index) => {
          %>
          <tr>
           
            <td class="text-center">
              <%= (currentPage - 1) * 10 + index + 1 %>
            </td>
            <td class="text-center"><span><%= item.name %></span></td>
            <td class="text-center">
              <span>$<%= item.price.toFixed(2) %></span>
            </td>

            <td class="text-center">
              <span><%= item.total_price_product %></span>
            </td>
            <td class="text-center position-relative">
              <a href="#" class="rounded-circle btn btn-sm btn-success update-status-btn" data-id="<%= item._id %>">
                <i class="fas <%= item.status === 'active' ? 'fa-check' : 'fa-times' %>" data-status="<%= item.status %>"></i>
              </a>
            </td>
            <td class="text-center position-relative">
              <input type="number" name="items-ordering" value="<%= item.ordering %>" class="text-center ordering" min="1" max="100" data-id="<%= item._id %>" />
            </td>
            <td class="text-center">
              <% if (item.image) { %>
              <img src="<%= item.image %>" alt="Item Image" class="item-image" style="max-width: 80px; max-height: 50px" />
              <% } %>
            </td>
            <td class="text-center">
              <a href="<%= `${formAction}/${item._id}` %>" class="rounded-circle btn btn-sm btn-info" title="Edit">
                <i class="fas fa-pencil-alt"></i>
              </a>
              <a href="#" class="rounded-circle btn btn-sm btn-danger deleteBtn" data-id="<%= item._id %>">
                <i class="fas fa-trash-alt"></i>
              </a>
            </td>
          </tr>
          <% }); %> <% } else { %>
          <tr>
            <td colspan="10">
              <h1 class="text-center text-secondary mt-5">
                No items found in the database
              </h1>
            </td>
          </tr>
          <% } %>
        </tbody>
      </table>
    </div>
    <div class="card-footer clearfix">
      <ul class="pagination pagination-sm m-0 float-right">
        <% for (let i = 1; i <= totalPages; i++) { %>
        <li class="page-item <%= currentPage === i ? 'active' : '' %>">
          <a class="page-link" href="<%= `${listAction}?page=${i}&status=${status}&keyword=${searchTerm}` %>"><%= i %></a>
        </li>
        <% } %>
      </ul>
    </div>
  </div>
</form>

<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteModalLabel">Confirm delete</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">Bạn có chắc chắn muốn xóa mục này không?</div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">
          Hủy
        </button>
        <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
          Xóa
        </button>
      </div>
    </div>
  </div>
</div>
<div id="statusMessage" class="flash-message" style="display: none"></div>
<% if (successMessage) { %>
<div class="flash-message success"><%= successMessage %></div>
<% } %> <% if (errorMessage) { %>
<div class="flash-message error"><%= errorMessage %></div>
<% } %>
<script>
  document.addEventListener("DOMContentLoaded", function() {
    function showStatusMessage(type, message) {
      const statusMessage = document.getElementById("statusMessage");
      statusMessage.className = `flash-message ${type}`;
      statusMessage.textContent = message;
      statusMessage.style.display = "block";
      setTimeout(function() {
        statusMessage.style.display = "none";
      }, 5000);
    }

    $("#checkAll").change(function() {
      const isChecked = $(this).prop("checked");
      $('input[name="checkItem"]').prop("checked", isChecked);
      disableSubmit();
    });

    document.querySelectorAll(".deleteBtn").forEach((button) => {
      let itemIdToDelete;
      button.addEventListener("click", function(event) {
        event.preventDefault();
        itemIdToDelete = this.getAttribute("data-id");
        $("#deleteModal").modal("show");
      });

      document
        .getElementById("confirmDeleteBtn")
        .addEventListener("click", function() {
          if (itemIdToDelete) {
            window.location.href = `/admin/product/delete/${itemIdToDelete}`;
          }
        });
    });
    let debounceTimer;
    document
      .querySelectorAll("input[name='items-ordering']")
      .forEach((input) => {
        input.addEventListener("input", function() {
          clearTimeout(debounceTimer);
          debounceTimer = setTimeout(() => {
            updateOrdering(this);
          }, 300);
        });

        input.addEventListener("keydown", function(event) {
          if (event.key === "Enter") {
            event.preventDefault();
            clearTimeout(debounceTimer);
            updateOrdering(this);
          }
        });
      });

    function updateOrdering(inputElement) {
      inputElement.disabled = true;

      const itemId = inputElement.getAttribute("data-id");
      const newOrdering = inputElement.value;

      handleFetch(`/admin/product/update-ordering/${itemId}`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            ordering: newOrdering
          }),
        })
        .then((data) => {
          if (data.success) {
            showStatusMessage("success", "Ordering updated successfully.");
          } else {
            showStatusMessage(
              "error",
              data.message || "Error updating ordering."
            );
          }
        })
        .catch((error) => {
          console.error("Error:", error);
          showStatusMessage("error", "Error updating ordering.");
        })
        .finally(() => {
          inputElement.disabled = false;
        });
    }

    document.querySelectorAll(".update-status-btn").forEach((button) => {
      button.addEventListener("click", function(event) {
        event.preventDefault();
        const itemId = this.getAttribute("data-id");

        handleFetch(`/admin/product/update-status/${itemId}`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
          })
          .then((data) => {
            const icon = this.querySelector("i");
            icon.classList.toggle("fa-check", data.status === "active");
            icon.classList.toggle("fa-times", data.status === "inactive");
            showStatusMessage("success", `Status updated to ${data.status}`);
          })
          .catch((error) => {
            console.error("Error:", error);
            showStatusMessage("error", "Error updating status");
          });
      });
    });

    document.querySelectorAll(".flash-message").forEach((message) => {
      message.style.display = "block";
      setTimeout(() => {
        message.style.display = "none";
      }, 5000);
    });
  });

  function handleFetch(url, options) {
    return fetch(url, options)
      .then((response) => {
        if (!response.ok) {
          throw new Error(`Error: ${response.status}`);
        }
        return response.json();
      })
      .then((data) => {
        if (data.success) {
          return data;
        } else {
          throw new Error(data.message || "Error processing request");
        }
      });
  }
</script>